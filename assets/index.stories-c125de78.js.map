{"version":3,"file":"index.stories-c125de78.js","sources":["../../packages/ui-react/src/components/button-group/index.tsx"],"sourcesContent":["import { createElement, ReactHTML, ReactNode } from 'react';\n\nimport { TStyle, useClassnames } from '../../hooks/use-classnames';\n\nimport style from './index.module.pcss';\n\nexport interface IProps {\n    /**\n     * Уникальный идентификатор компонента.\n     **/\n    id?: string,\n    /**\n     * Один или несколько классов для стилизации компонента.\n     **/\n    className?: TStyle | string,\n    /**\n     * Ориентация кнопок в группе.\n     **/\n    direction?: 'row' | 'column',\n    /**\n     * Предустановленный стиль для компонента.\n     **/\n    presetStyle?: 'desktop' | 'mobile',\n    /**\n     * Кнопки, которые нужно группировать.\n     **/\n    children?: ReactNode,\n    /**\n     * Тег, который будет использоваться для рендеринга компонента.\n     **/\n    tagName?: keyof ReactHTML | ''\n}\n\n/**\n * Компонент для группирования кнопок.\n **/\nexport const ButtonGroup = ({ direction = 'column', tagName = 'div', presetStyle = 'desktop', ...props }: IProps) => {\n    const cn = useClassnames(style, props.className);\n\n    return createElement(tagName || 'div', {\n        id       : props.id,\n        children : props.children,\n        className: cn('button-group', {\n            [`button-group_${direction}`]  : direction,\n            [`button-group_${presetStyle}`]: presetStyle\n        })\n    });\n};\n"],"names":["ButtonGroup","direction","tagName","presetStyle","props","cn","useClassnames","style","createElement"],"mappings":"sgBAoCOA,EAAA,CAAA,CAAA,UAAAC,EAAA,SAAA,QAAAC,EAAA,MAAA,YAAAC,EAAA,UAAA,GAAAC,KAAA,CACH,MAAAC,EAAAC,EAAAC,EAAAH,EAAA,SAAA,EAEA,OAAAI,EAAA,cAAAN,GAAA,MAAA,CAAuC,GAAAE,EAAA,GAClB,SAAAA,EAAA,SACA,UAAAC,EAAA,eAAA,CACa,CAAA,gBAAAJ,GAAA,EAAAA,EACO,CAAA,gBAAAE,GAAA,EAAAA,CACA,CAAA,CACpC,CAAA,CAET;;;;;;;;;;;;;;;;;;;;"}