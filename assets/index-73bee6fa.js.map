{"version":3,"file":"index-73bee6fa.js","sources":["../../packages/ui-react/src/components/checkbox-group/index.tsx"],"sourcesContent":["import React, { FieldsetHTMLAttributes, ReactNode, useMemo } from 'react';\n\nimport { TStyle, useClassnames } from '../../hooks/use-classnames';\n\nimport style from './index.module.pcss';\n\ntype TNative = FieldsetHTMLAttributes<HTMLFieldSetElement>;\n\nexport interface IProps {\n    /**\n     * React-компоненты `Checkbox`, которые являются частью группы.\n     **/\n    children: ReactNode,\n    /**\n     * Определяет CSS-классы, которые будут применены к корневому элементу\n     **/\n    className?: string | TStyle,\n    /**\n     * Текст, который будет использован в качестве заголовка группы чекбоксов.\n     **/\n    legend?: ReactNode,\n    /**\n     * Направление, в котором будут располагаться чекбоксы.\n     **/\n    direction?: 'row' | 'column',\n    /**\n     * Определяет, должны ли все чекбоксы в группе быть отключеными.\n     **/\n    disabled?: TNative['disabled'],\n    /**\n     * Уникальный идентификатор компонента\n     **/\n    id?: TNative['id']\n}\n\n/**\n * Компонент `CheckboxGroup` представляет собой группу чекбоксов, которые могут быть выбраны пользователем.\n **/\nexport const CheckboxGroup = ({ direction = 'row', ...props }: IProps) => {\n    const cn = useClassnames(style, props.className);\n\n    const elLegend = useMemo(() => {\n        if(props.legend) {\n            return (\n                <legend\n                    className={cn('checkbox-group__legend')}\n                    children={props.legend}\n                />\n            );\n        }\n    }, [props.legend]);\n\n    return (\n        <fieldset\n            id={props.id}\n            disabled={props.disabled}\n            className={cn('checkbox-group', {\n                [`checkbox-group_${direction}`]: direction\n            })}\n        >\n            {elLegend}\n            {props.children}\n        </fieldset>\n    );\n};\n"],"names":["CheckboxGroup","direction","props","cn","useClassnames","style","elLegend","useMemo","jsx","jsxs"],"mappings":"iWAsCOA,EAAA,CAAA,CAAA,UAAAC,EAAA,MAAA,GAAAC,CAAA,IAAA,CACH,MAAAC,EAAAC,EAAAC,EAAAH,EAAA,SAAA,EAEAI,EAAAC,EAAAA,QAAA,IAAA,CACI,GAAAL,EAAA,OACI,OAAAM,EACI,SAAC,CAAA,UAAAL,EAAA,wBAAA,EACyC,SAAAD,EAAA,MACtB,CAAA,CAG5B,EAAA,CAAAA,EAAA,MAAA,CAAA,EAGJ,OAAAO,EACI,WAAC,CAAA,GAAAP,EAAA,GACa,SAAAA,EAAA,SACM,UAAAC,EAAA,iBAAA,CACgB,CAAA,kBAAAF,GAAA,EAAAA,CACK,CAAA,EACpC,SAAA,CAEAK,EAAAJ,EAAA,QACM,CAAA,CAAA,CAGnB"}