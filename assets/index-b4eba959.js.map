{"version":3,"file":"index-b4eba959.js","sources":["../../packages/ui-react/src/components/nav-item/index.tsx"],"sourcesContent":["import React, { useMemo, AnchorHTMLAttributes, forwardRef } from 'react';\n\nimport { TStyle, useClassnames } from '../../hooks/use-classnames';\n\nimport style from './index.module.pcss';\n\ntype TNative = AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport interface IProps {\n    /**\n     * Позволяет задавать дополнительные классы для стилизации элемента.\n     */\n    className?: TStyle | string,\n    /**\n     * Определяет предустановленный стиль элемента навигации.\n     */\n    presetStyle?: 'default' | 'active',\n    /**\n     * Определяет, отключен ли элемент навигации\n     */\n    isDisabled?: boolean,\n    /**\n     * Задает текстовое описание, которое будет отображаться при наведении курсора на элемент навигации.\n     */\n    title?: TNative['title'],\n    /**\n     * Содержимое элемента\n     */\n    children?: TNative['children'],\n    /**\n     * Обработчик клика на элементе\n     */\n    onClick?: TNative['onClick'],\n    /**\n     * Адрес ссылки, на который будет осуществлен переход при клике\n     */\n    href?: TNative['href'],\n    /**\n     * Задает, в каком окне или фрейме должна быть загружена связанная с пунктом навигации страница, когда пользователь нажимает на этот пункт.\n     */\n    target?: TNative['target'],\n    /**\n     * Указывает, должен ли браузер загружать ресурс по ссылке, вместо того, чтобы отображать его в браузере.\n     */\n    download?: TNative['download']\n}\n\n/**\n * Компонент NavItem используется для создания элементов навигационного меню.\n * Он может содержать иконку, текст и/или другие дочерние элементы.\n */\nexport const NavItem = forwardRef<HTMLAnchorElement | null, IProps>(({ className, isDisabled, presetStyle = 'default', ...props }, ref) => {\n    const cn = useClassnames(style, className);\n\n    const title = useMemo(() => {\n        if(props.title) {\n            return props.title;\n        }\n\n        if(typeof props.children === 'string') {\n            return props.children;\n        }\n    }, [props.title, props.children]);\n\n    return (\n        <a\n            {...props}\n            ref={ref}\n            className={cn('nav-item', {\n                [`nav-item_preset-${presetStyle}`]: presetStyle,\n                'nav-item_disabled'               : isDisabled\n            })}\n            title={title}\n        />\n    );\n});\n"],"names":["NavItem","forwardRef","className","isDisabled","presetStyle","props","ref","cn","useClassnames","style","title","useMemo","jsx"],"mappings":"mRAmDOA,EAAAC,EAAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,WAAAC,EAAA,YAAAC,EAAA,UAAA,GAAAC,CAAA,EAAAC,IAAA,CACH,MAAAC,EAAAC,EAAAC,EAAAP,CAAA,EAEAQ,EAAAC,EAAAA,QAAA,IAAA,CACI,GAAAN,EAAA,MACI,OAAAA,EAAA,MAGJ,GAAA,OAAAA,EAAA,UAAA,SACI,OAAAA,EAAA,QACJ,EAAA,CAAAA,EAAA,MAAAA,EAAA,QAAA,CAAA,EAGJ,OAAAO,EACI,IAAC,CAAA,GAAAP,EACO,IAAAC,EACJ,UAAAC,EAAA,WAAA,CAC0B,CAAA,mBAAAH,GAAA,EAAAA,EACc,oBAAAD,CACA,CAAA,EACvC,MAAAO,CACD,CAAA,CAGZ,CAAA;"}