import{a as f}from"./jsx-runtime-68f49b4e.js";import{r as l}from"./index-f1f749bf.js";import{u as C}from"./index-464e8f3b.js";import"./_commonjsHelpers-042e6b4d.js";const A={"nav-item":"_nav-item_1e8s6_1","nav-item_preset-active":"_nav-item_preset-active_1e8s6_1","nav-item_disabled":"_nav-item_disabled_1e8s6_1"},t=l.forwardRef(({className:r,isDisabled:m,presetStyle:n="default",...u},D)=>{const B=C(A,r),p=l.useMemo(()=>{if(u.title)return u.title;if(typeof u.children=="string")return u.children},[u.title,u.children]);return f("a",{...u,ref:D,className:B("nav-item",{[`nav-item_preset-${n}`]:n,"nav-item_disabled":m}),title:p})});try{t.displayName="NavItem",t.__docgenInfo={description:`Компонент NavItem используется для создания элементов навигационного меню.
Он может содержать иконку, текст и/или другие дочерние элементы.`,displayName:"NavItem",props:{className:{defaultValue:null,description:"Позволяет задавать дополнительные классы для стилизации элемента.",name:"className",required:!1,type:{name:"string | TStyle"}},presetStyle:{defaultValue:{value:"default"},description:"Определяет предустановленный стиль элемента навигации.",name:"presetStyle",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"active"'}]}},isDisabled:{defaultValue:null,description:"Определяет, отключен ли элемент навигации",name:"isDisabled",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"Задает текстовое описание, которое будет отображаться при наведении курсора на элемент навигации.",name:"title",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Содержимое элемента",name:"children",required:!1,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Обработчик клика на элементе",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLAnchorElement>"}},href:{defaultValue:null,description:"Адрес ссылки, на который будет осуществлен переход при клике",name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"Задает, в каком окне или фрейме должна быть загружена связанная с пунктом навигации страница, когда пользователь нажимает на этот пункт.",name:"target",required:!1,type:{name:"HTMLAttributeAnchorTarget"}},download:{defaultValue:null,description:"Указывает, должен ли браузер загружать ресурс по ссылке, вместо того, чтобы отображать его в браузере.",name:"download",required:!1,type:{name:"any"}}}}}catch{}const g={title:"Components/NavItem",component:t,tags:["autodocs"],args:{children:"Кнопка",href:"#"}},e={},a={args:{presetStyle:"active"}};var s,i,d;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:"{}",...(d=(i=e.parameters)==null?void 0:i.docs)==null?void 0:d.source}}};var o,E,c;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    presetStyle: 'active'
  }
}`,...(c=(E=a.parameters)==null?void 0:E.docs)==null?void 0:c.source}}};const h=["Default","Active"];export{a as Active,e as Default,h as __namedExportsOrder,g as default};
//# sourceMappingURL=index.stories-74a23732.js.map
