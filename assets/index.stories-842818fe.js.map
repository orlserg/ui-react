{"version":3,"file":"index.stories-842818fe.js","sources":["../../packages/ui-react/src/components/tag/index.tsx"],"sourcesContent":["import React, { ReactNode, HTMLAttributes } from 'react';\n\nimport { TStyle, useClassnames } from '../../hooks/use-classnames';\n\nimport style from './index.module.pcss';\n\ninterface IProps extends Pick<HTMLAttributes<HTMLSpanElement>, 'onClick' | 'onDrag' | 'onMouseEnter' | 'onMouseLeave'> {\n    /**\n     * Если параметр `id` не указан, то компонент будет создан без уникального идентификатора.\n     */\n    id?: string,\n    /**\n     * Параметр `children` может содержать любые дочерние элементы, например строки, числа, другие компоненты React и т. д.\n     */\n    children?: ReactNode,\n    /**\n     * Параметр `className` используется для добавления пользовательских CSS классов к компоненту. Это позволяет настраивать внешний вид компонента с помощью пользовательских стилей.\n     */\n    className?: string | TStyle,\n    /**\n     * При использовании `presetStyle` компонент будет автоматически применять стили, соответствующие выбранному значению.\n     */\n    presetStyle?: 'tag' | 'badge-success' | 'badge-rollbacked' | 'badge-active' | 'badge-processing' | 'badge-failed' | 'badge-purple',\n    /**\n     * При использовании `presetSize` компонент будет автоматически применять размер, соответствующий выбранному значению.\n     */\n    presetSize?: 'small' | 'medium' | 'large'\n}\n\n/**\n * Компонент `Tag` (Badge) используется для отображения информации в виде меток или значков, которые могут быть прикреплены к другим элементам интерфейса.\n */\nexport const Tag = ({ presetSize = 'small', presetStyle = 'tag', ...props }: IProps) => {\n    const cn = useClassnames(style, props.className);\n\n    return (\n        <span\n            id={props.id}\n            onClick={props.onClick}\n            onDrag={props.onDrag}\n            onMouseEnter={props.onMouseEnter}\n            onMouseLeave={props.onMouseLeave}\n            children={props.children}\n            className={cn('tag', {\n                [`tag_style-${presetStyle}`]: presetStyle,\n                [`tag_size-${presetSize}`]  : presetSize,\n                'tag_interactive'           : !!props.onClick\n            })}\n        />\n    );\n};\n"],"names":["Tag","presetSize","presetStyle","props","cn","useClassnames","style","jsx"],"mappings":"4yBAgCOA,EAAA,CAAA,CAAA,WAAAC,EAAA,QAAA,YAAAC,EAAA,MAAA,GAAAC,KAAA,CACH,MAAAC,GAAAC,GAAAC,GAAAH,EAAA,SAAA,EAEA,OAAAI,EACI,OAAC,CAAA,GAAAJ,EAAA,GACa,QAAAA,EAAA,QACK,OAAAA,EAAA,OACD,aAAAA,EAAA,aACM,aAAAA,EAAA,aACA,SAAAA,EAAA,SACJ,UAAAC,GAAA,MAAA,CACK,CAAA,aAAAF,GAAA,EAAAA,EACa,CAAA,YAAAD,GAAA,EAAAA,EACA,gBAAA,CAAA,CAAAE,EAAA,OACQ,CAAA,CACzC,CAAA,CAGb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}